module TrustGraph declares *

data AddTrustResult:
  success: bool
  error: string
  weight: u32

data Trust:
  issued_for: string
  expires_at: u64
  signature: string
  sig_type: string
  issued_at: u64

data Certificate:
  chain: []Trust

data AllCertsResult:
  success: bool
  certificates: []Certificate
  error: string

data Revocation:
  revoked_peer_id: string
  revoked_at: u64
  signature: string
  sig_type: string
  revoked_by: string

data ExportRevocationsResult:
  success: bool
  revocations: []Revocation
  error: string

data GetRevokeBytesResult:
  success: bool
  error: string
  result: []u8

data GetTrustBytesResult:
  success: bool
  error: string
  result: []u8

data InsertResult:
  success: bool
  error: string

data IssueRevocationResult:
  success: bool
  error: string
  revocation: Revocation

data IssueTrustResult:
  success: bool
  error: string
  trust: Trust

data RevokeResult:
  success: bool
  error: string

data SetRootResult:
  success: bool
  error: string

data VerifyTrustResult:
  success: bool
  error: string

data WeightResult:
  success: bool
  weight: u32
  peer_id: string
  error: string

service TrustGraph("trust-graph"):
  add_trust(trust: Trust, issuer_peer_id: string, timestamp_sec: u64) -> AddTrustResult
  export_revocations(issued_for: string) -> ExportRevocationsResult
  get_all_certs(issued_for: string, timestamp_sec: u64) -> AllCertsResult
  get_all_certs_from(issued_for: string, issuer: string, timestamp_sec: u64) -> AllCertsResult
  get_host_certs(timestamp_sec: u64) -> AllCertsResult
  get_host_certs_from(issuer: string, timestamp_sec: u64) -> AllCertsResult
  get_revocation_bytes(revoked_peer_id: string, revoked_at: u64) -> GetRevokeBytesResult
  get_trust_bytes(issued_for_peer_id: string, expires_at_sec: u64, issued_at_sec: u64) -> GetTrustBytesResult
  get_weight(peer_id: string, timestamp_sec: u64) -> WeightResult
  get_weight_from(peer_id: string, issuer: string, timestamp_sec: u64) -> WeightResult
  insert_cert(certificate: Certificate, timestamp_sec: u64) -> InsertResult
  insert_cert_raw(certificate: string, timestamp_sec: u64) -> InsertResult
  issue_revocation(revoked_by_peer_id: string, revoked_peer_id: string, revoked_at_sec: u64, signature_bytes: []u8) -> IssueRevocationResult
  issue_trust(issued_for_peer_id: string, expires_at_sec: u64, issued_at_sec: u64, trust_bytes: []u8) -> IssueTrustResult
  revoke(revoke: Revocation, timestamp_sec: u64) -> RevokeResult
  set_root(peer_id: string, max_chain_len: u32) -> SetRootResult
  verify_trust(trust: Trust, issuer_peer_id: string, timestamp_sec: u64) -> VerifyTrustResult
